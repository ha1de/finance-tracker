generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite" // Use SQLite as the database provider
  url      = env("DATABASE_URL") // Database URL from the environment variables
}

// --- User Model ---
model User {
  id        Int      @id @default(autoincrement())  // Primary key with auto-increment
  email     String   @unique                       // Unique email for each user
  password  String   // Store hashed password
  name      String?  // Optional user name
  createdAt DateTime @default(now())               // Timestamp for user creation
  updatedAt DateTime @updatedAt                    // Timestamp for last update

  transactions Transaction[] // Relation to transactions

  @@map("users") // Optional: Specify the table name as "users"
}

// --- Transaction Model ---
enum TransactionType {
  INCOME
  EXPENSE
}

model Transaction {
  id          Int             @id @default(autoincrement())  // Primary key with auto-increment
  description String          // Description of the transaction
  amount      Float           // Monetary value (consider using Decimal if required)
  type        TransactionType // Type: INCOME or EXPENSE
  date        DateTime        @default(now())  // Timestamp for when the transaction occurred
  createdAt   DateTime        @default(now())  // Timestamp for transaction creation
  updatedAt   DateTime        @updatedAt       // Timestamp for last update

  userId Int  // Foreign key to the User model
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade) // Cascade delete transactions if user is deleted

  @@map("transactions") // Optional: Specify the table name as "transactions"
}
